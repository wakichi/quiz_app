version: "3"
# 本番用のサーバをローカルで試すための構成です
#memo
# nginxをリバースプロキシで使う場合、フロントとバックそれぞれにwebサーバなくてもいいかも
services:
  backend:
    container_name: backend-prod
    build: ./backend/app/.
    # todo: ここをアプリケーションサーバの立ち上げに変更
    command: gunicorn -w 4 quizProject.wsgi:application --bind 0.0.0.0:8000 --chdir /code/quizProject
    # todo:ここはvolumeじゃなくてコピーのほうがいいかも？
    volumes:
      - ./backend/app:/code/
    # todo portsは普通これでいい？
    ports:
      - "8000:8000"
    # depends_on消す？
    depends_on:
      db:
        condition: service_healthy
    #todo:access pointとかもenvいれる？
    environment:
      - DJANGO_ENV=development
    #todo:networkあったほうがいい？
    env_file:
      - backend.env

  # rds使う場合はここごっそりけしてよい？
  # rdsの設定をbackend/environにいれる？
  db:
    image: mysql
    container_name: db-prod
    environment:
      MYSQL_DATABASE: django-db
      MYSQL_USER: django
      MYSQL_PASSWORD: django
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    expose:
      - 3306
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD

  frontend:
    container_name: front_prod
    image: node:alpine
    # volumes消す？
    volumes:
      - ./frontend/web-front/:/usr/src/app
    working_dir: /usr/src/app
    # たぶんここはbuildで良さそう？
    command: sh -c "npm install && npm run build"
    ports:
      - "3000:3000"
    tty: true
    # stdin_open: true
    environment:
      - ENV=DEV

  nginx:
    container_name: nginx-prod
    image: nginx:1.13
    # build: ./nginx/.
    # for frontend build folder
    volumes:
      - ./frontend/web-front/build:/usr/share/nginx/html
      - ./nginx/:/etc/nginx/conf.d
    ports:
      - "8080:80"
    depends_on:
      - backend
      # frontend:
      #   condition: service_completed_successfully
